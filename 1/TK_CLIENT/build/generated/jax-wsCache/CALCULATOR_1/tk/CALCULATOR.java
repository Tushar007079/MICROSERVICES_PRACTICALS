
package tk;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.1
 * 
 */
@WebService(name = "CALCULATOR", targetNamespace = "http://TK/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CALCULATOR {


    /**
     * 
     * @param t
     * @param k
     * @return
     *     returns java.lang.Float
     */
    @WebMethod(operationName = "Addition")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Addition", targetNamespace = "http://TK/", className = "tk.Addition")
    @ResponseWrapper(localName = "AdditionResponse", targetNamespace = "http://TK/", className = "tk.AdditionResponse")
    public Float addition(
        @WebParam(name = "t", targetNamespace = "")
        float t,
        @WebParam(name = "k", targetNamespace = "")
        float k);

    /**
     * 
     * @param t
     * @param k
     * @return
     *     returns java.lang.Float
     */
    @WebMethod(operationName = "Subtraction")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Subtraction", targetNamespace = "http://TK/", className = "tk.Subtraction")
    @ResponseWrapper(localName = "SubtractionResponse", targetNamespace = "http://TK/", className = "tk.SubtractionResponse")
    public Float subtraction(
        @WebParam(name = "t", targetNamespace = "")
        float t,
        @WebParam(name = "k", targetNamespace = "")
        float k);

    /**
     * 
     * @param t
     * @param k
     * @return
     *     returns java.lang.Float
     */
    @WebMethod(operationName = "Multiplication")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Multiplication", targetNamespace = "http://TK/", className = "tk.Multiplication")
    @ResponseWrapper(localName = "MultiplicationResponse", targetNamespace = "http://TK/", className = "tk.MultiplicationResponse")
    public Float multiplication(
        @WebParam(name = "t", targetNamespace = "")
        float t,
        @WebParam(name = "k", targetNamespace = "")
        float k);

    /**
     * 
     * @param t
     * @param k
     * @return
     *     returns java.lang.Float
     */
    @WebMethod(operationName = "Division")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Division", targetNamespace = "http://TK/", className = "tk.Division")
    @ResponseWrapper(localName = "DivisionResponse", targetNamespace = "http://TK/", className = "tk.DivisionResponse")
    public Float division(
        @WebParam(name = "t", targetNamespace = "")
        float t,
        @WebParam(name = "k", targetNamespace = "")
        float k);

}
